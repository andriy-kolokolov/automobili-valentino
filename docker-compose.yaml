services:
  app:
    build:
      context: .
      target: app
    container_name: app
    restart: unless-stopped
    expose:
      - "9000"
    env_file:
      - .env
    volumes:
      - ./:/var/www
      - ./.env:/var/www/.env
    networks:
      - app-network
    depends_on:
      - mysql

  mysql:
    image: mysql
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-auto_val_db}
      MYSQL_USER: app_user
      MYSQL_PASSWORD: rootpasswd
      MYSQL_ROOT_PASSWORD: passwdroot
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  nginx:
    build:
      context: .
      target: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/templates/default.conf.template:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - app

  nodejs:
    build:
      context: .
      target: nodejs
    container_name: nodejs
    ports:
      - "3000:3000"
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /var/www/node_modules
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  node_modules: